======
Master
======

-it contains Control manager, etcd cluster,kube scheduler,API-server
API-Server:-it interacts directly with user, the kube api-server is meant to scale automatically as per load.
etcd cluster:- it keeps all the information about pod it is a kind of database/storage that keeps the information about pods and current state of containers and tells to control manager, it can be accessed by API-Server only.
kube scheduler:- it performs the task asked by control manager, when user make request for creation and management of pods it takes action on those requests.
Admin(user/kubectl):- it communicates with API -server about all its requirements using json or .yml scripts.

====
Node
====

Cluster: It is group of master & nodes
Pod:- It is a group of containers that are deployed together on the same host,  runs on node which is controlled by master , used to create and store containers, you can create multiple containers in pod but it is recommended to create only one container in pod bcoz containers in pod are tightly coupled if one container gets failed then all the remaining containers will automatically gets failed. If pod is failed then it cannot be recreated.
Kubelet:- It is an agent running on node which is used to control pod, it deceids what should be in the pod it requests to api-server and then from api server that request will be given to control manager  on to which kube schedular will work it works as an informer in node that will tells what is happening in nodes to api server. port number 10255
Kube-proxy:- used to assign ip address to pod, tells how one pod can communicate with other pods. [containers dont have any ip , ip's are only assigned to pods in kubernetes]
Docker:- it works with kubelet, it pulls image, start/stop containers, exposing containers on ports specified in manifest.

============================================
Setting up Kubernetes Master & Nodes on AWS
============================================

-Login to AWS account 
-launch 3 instances 1 master and 2 nodes (ubuntu 20.04, t2.medium)
-master should have 2vcpu and 4gb ram 
-connect your instances
-sudo su
-apt-get update
-apt-get install apt-transport-https
-apt install docker.io -y
-docker --version
-systemctl start docker
-systemctl enable docker
-sudo curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add 
-nano /etc/apt/sources.list.d/kubernetes.list
[[paste this file]deb http://apt.kubernetes.io/ kubernetes-xenial main]
 -apt-get update
-apt-get install -y kubelet kubeadm kubectl kubernetes-cni


